(module
 (deviserlib)

 (import (builtins))
 (export and all all* append append* cond quasiquote macro-expand)

 ;;first comment

 (defmacro and (first &rest r)
   (list (quote if) first
         (if r
             (cons (quote and) r)
           (quote t))))

 (defmacro cond (&rest exps)
   (expand-cond-exps exps))

 (defun expand-cond-exps (exps)
   (if exps
       (let* ((condition (car (car exps))) (actions (cdr (car exps))))
         (append (list (quote if) condition
                       (cons (quote begin) actions))
                 (list (expand-cond-exps (cdr exps)))))
     (quote nil)))

 (defun all (&rest r)
   (all* r))

 (defun all* (l)
   (if l
       (if (car l)
           (all* (cdr l)))
     t))

 (defun append (&rest r)
   (append* r))

 (defun append* (ls)
   (if ls
       (if (car ls)
           (cons (car (car ls)) (append* (cons (cdr (car ls)) (cdr ls))))
         (append* (cdr ls)))))

 (defun tag-quasiquote? (form)
   (and (cons? form) (eq (car form) (quote quasiquote))))

 (defun tag-unquote? (form)
   (and (cons? form) (eq (car form) (quote unquote))))

 (defun tag-unquote-splice? (form)
   (and (cons? form) (eq (car form) (quote unquote-splice))))

 (defun tag-data (form)
   (car (cdr form)))

 (defun macro-expand (form)
   (let* ((newform (macro-expand-1 form)))
     (if (equal form newform)
         form
         (macro-expand newform))))

 (defun qq-expand-list (form)
   (cond ((tag-unquote? form) (list (quote list) (tag-data form)))
         ((tag-unquote-splice? form) (tag-data form))
         ((tag-quasiquote? form) (qq-expand-list (qq-expand (tag-data form))))
         ((cons? form)
          (list (quote list)
                (list (quote append)
                      (qq-expand-list (car form))
                      (qq-expand (cdr form)))))
         (t (list (quote quote) (list form)))))

 (defun qq-expand (form)
   (cond ((tag-unquote? form) (tag-data form))
         ((tag-quasiquote? form)
          (qq-expand (qq-expand (tag-data form))))
         ((cons? form)
          (list (quote append)
                (qq-expand-list (car form))
                (qq-expand (cdr form))))
         (t (list (quote quote) form))))

 (defmacro quasiquote (form)
   (qq-expand form)))

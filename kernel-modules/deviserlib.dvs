(module
 (deviserlib)

 (import (builtins))
 (export and all all* append append*)

 (defmacro and (first &rest r)
   (list (quote if) first
         (if r
             (cons (quote and) r)
           (quote t))))

 (defun all (&rest r)
   (all* r))

 (defun all* (l)
   (if l
       (if (car l)
           (all* (cdr l)))
     t))

 (defun append (&rest r)
   (append* r))

 (defun append* (ls)
   (if ls
       (if (car ls)
           (cons (car (car ls)) (append* (cons (cdr (car ls)) (cdr ls))))
         (append* (cdr ls)))))

 (defmacro quasiquote (form)
   (if (consp form)
       t
     (quote (quote form)))))
